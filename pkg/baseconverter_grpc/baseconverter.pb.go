// Code generated by protoc-gen-go. DO NOT EDIT.
// source: baseconverter.proto

package baseconverter_grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BaseConverterRequest struct {
	Number               string   `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	InBase               string   `protobuf:"bytes,2,opt,name=inBase,proto3" json:"inBase,omitempty"`
	ToBase               string   `protobuf:"bytes,3,opt,name=toBase,proto3" json:"toBase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseConverterRequest) Reset()         { *m = BaseConverterRequest{} }
func (m *BaseConverterRequest) String() string { return proto.CompactTextString(m) }
func (*BaseConverterRequest) ProtoMessage()    {}
func (*BaseConverterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baseconverter_d124766c61729bba, []int{0}
}
func (m *BaseConverterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseConverterRequest.Unmarshal(m, b)
}
func (m *BaseConverterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseConverterRequest.Marshal(b, m, deterministic)
}
func (dst *BaseConverterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseConverterRequest.Merge(dst, src)
}
func (m *BaseConverterRequest) XXX_Size() int {
	return xxx_messageInfo_BaseConverterRequest.Size(m)
}
func (m *BaseConverterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseConverterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BaseConverterRequest proto.InternalMessageInfo

func (m *BaseConverterRequest) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *BaseConverterRequest) GetInBase() string {
	if m != nil {
		return m.InBase
	}
	return ""
}

func (m *BaseConverterRequest) GetToBase() string {
	if m != nil {
		return m.ToBase
	}
	return ""
}

type BaseConverterReply struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ErrorInBase          string   `protobuf:"bytes,2,opt,name=errorInBase,proto3" json:"errorInBase,omitempty"`
	ErrorToBase          string   `protobuf:"bytes,3,opt,name=errorToBase,proto3" json:"errorToBase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseConverterReply) Reset()         { *m = BaseConverterReply{} }
func (m *BaseConverterReply) String() string { return proto.CompactTextString(m) }
func (*BaseConverterReply) ProtoMessage()    {}
func (*BaseConverterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_baseconverter_d124766c61729bba, []int{1}
}
func (m *BaseConverterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseConverterReply.Unmarshal(m, b)
}
func (m *BaseConverterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseConverterReply.Marshal(b, m, deterministic)
}
func (dst *BaseConverterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseConverterReply.Merge(dst, src)
}
func (m *BaseConverterReply) XXX_Size() int {
	return xxx_messageInfo_BaseConverterReply.Size(m)
}
func (m *BaseConverterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseConverterReply.DiscardUnknown(m)
}

var xxx_messageInfo_BaseConverterReply proto.InternalMessageInfo

func (m *BaseConverterReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *BaseConverterReply) GetErrorInBase() string {
	if m != nil {
		return m.ErrorInBase
	}
	return ""
}

func (m *BaseConverterReply) GetErrorToBase() string {
	if m != nil {
		return m.ErrorToBase
	}
	return ""
}

func init() {
	proto.RegisterType((*BaseConverterRequest)(nil), "baseconverter_grpc.BaseConverterRequest")
	proto.RegisterType((*BaseConverterReply)(nil), "baseconverter_grpc.BaseConverterReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BaseConverterServiceClient is the client API for BaseConverterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BaseConverterServiceClient interface {
	Convert(ctx context.Context, in *BaseConverterRequest, opts ...grpc.CallOption) (*BaseConverterReply, error)
}

type baseConverterServiceClient struct {
	cc *grpc.ClientConn
}

func NewBaseConverterServiceClient(cc *grpc.ClientConn) BaseConverterServiceClient {
	return &baseConverterServiceClient{cc}
}

func (c *baseConverterServiceClient) Convert(ctx context.Context, in *BaseConverterRequest, opts ...grpc.CallOption) (*BaseConverterReply, error) {
	out := new(BaseConverterReply)
	err := c.cc.Invoke(ctx, "/baseconverter_grpc.BaseConverterService/Convert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BaseConverterServiceServer is the server API for BaseConverterService service.
type BaseConverterServiceServer interface {
	Convert(context.Context, *BaseConverterRequest) (*BaseConverterReply, error)
}

func RegisterBaseConverterServiceServer(s *grpc.Server, srv BaseConverterServiceServer) {
	s.RegisterService(&_BaseConverterService_serviceDesc, srv)
}

func _BaseConverterService_Convert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BaseConverterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseConverterServiceServer).Convert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/baseconverter_grpc.BaseConverterService/Convert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseConverterServiceServer).Convert(ctx, req.(*BaseConverterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BaseConverterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "baseconverter_grpc.BaseConverterService",
	HandlerType: (*BaseConverterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Convert",
			Handler:    _BaseConverterService_Convert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "baseconverter.proto",
}

func init() { proto.RegisterFile("baseconverter.proto", fileDescriptor_baseconverter_d124766c61729bba) }

var fileDescriptor_baseconverter_d124766c61729bba = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x4a, 0x2c, 0x4e,
	0x4d, 0xce, 0xcf, 0x2b, 0x4b, 0x2d, 0x2a, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x12, 0x42, 0x11, 0x8c, 0x4f, 0x2f, 0x2a, 0x48, 0x56, 0x8a, 0xe3, 0x12, 0x71, 0x4a, 0x2c, 0x4e,
	0x75, 0x86, 0x89, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x89, 0x71, 0xb1, 0xe5, 0x95,
	0xe6, 0x26, 0xa5, 0x16, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x79, 0x20, 0xf1, 0xcc,
	0x3c, 0x90, 0x0e, 0x09, 0x26, 0x88, 0x38, 0x84, 0x07, 0x12, 0x2f, 0xc9, 0x07, 0x8b, 0x33, 0x43,
	0xc4, 0x21, 0x3c, 0xa5, 0x02, 0x2e, 0x21, 0x34, 0xf3, 0x0b, 0x72, 0x2a, 0x41, 0xaa, 0x8b, 0x52,
	0x8b, 0x4b, 0x73, 0x4a, 0x60, 0xa6, 0x43, 0x78, 0x42, 0x0a, 0x5c, 0xdc, 0xa9, 0x45, 0x45, 0xf9,
	0x45, 0x9e, 0xc8, 0x56, 0x20, 0x0b, 0xc1, 0x55, 0x84, 0x20, 0x5b, 0x86, 0x2c, 0x64, 0x54, 0x8a,
	0xe6, 0xa3, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0xa1, 0x58, 0x2e, 0x76, 0xa8, 0x98, 0x90,
	0x86, 0x1e, 0x66, 0x48, 0xe8, 0x61, 0x0b, 0x06, 0x29, 0x35, 0x22, 0x54, 0x16, 0xe4, 0x54, 0x2a,
	0x31, 0x24, 0xb1, 0x81, 0xc3, 0xd8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xee, 0x42, 0xbf, 0xe8,
	0x7a, 0x01, 0x00, 0x00,
}
